setwd("C:/Users/Shuntaro/OneDrive/NORCE LFI/naiad package")
?cleanTax
#' cleanTax Function
#' Written by X
#' Cleans dataframe based on a list of taxa
#' @param datain A dataframe containing columns River, Date (Date Class, set as YMD), Species (taxa name), and Value (Abundance)
#' @return A clean dataframe with corrected naming of taxa
#' @export
cleanTax <- function(datain, Taxonomy) {
# Add a new column to store original species names
datain$Original_Species <- datain$Species
# Clean up species names
datain$Species <- gsub("\\s+$", "", datain$Species) # remove extra spaces
datain$Species <- gsub("( indet\\.?| sp\\.?($|\\s))", "", datain$Species) # remove indet. or sp. at the end or followed by space
datain$Species <- gsub("\\s*/\\s*", "/", datain$Species) # remove spaces before and after slashes
# Create a mapping of corrected names using amatch
correct_names <- amatch(datain$Species, Taxonomy$Species, maxDist = 2)
# Remove unmatched names and return a list of removed names
removed_names <- unique(datain$Species[is.na(correct_names)])
datain <- datain[!is.na(correct_names),]
# Replace species names with corrected names
datain$Species <- Taxonomy$Species[correct_names[!is.na(correct_names)]]
# Return the cleaned up dataframe and list of removed names
return(list(Data = datain, Removed_Names = removed_names))
}
?cleanTax
roxygenise()
library(roxygen2)
roxygenise()
roxygenise()
rm(list = c("cleanTax"))
roxygenise()
?cleanTax
?cleanTax
roxygenise()
?cleanTax
?cleanTax
roxygenise()
?cleanTax
load(Taxonomy)
load("Taxonomy.RData")
Taxonomy <- read.csv('Taxonomy.xsv')
Taxonomy <- read.csv('Taxonomy.csv')
setwd("C:/Users/Shuntaro/OneDrive/NORCE LFI/naiad package/Data")
Taxonomy <- read.csv('Taxonomy.csv')
save(Taxonomy, file='Taxonomy.rda')
View(Taxonomy)
roxygenise()
setwd("C:/Users/Shuntaro/OneDrive/NORCE LFI/naiad package")
roxygenise()
?cleanTax
load('Taxonomy')
load('Taxonomy.rda')
data(Taxonomy)
rm(list=ls())
data(Taxonomy)
roxygenise()
?cleanTax
roxygenise()
?cleanTax
roxygenise()
?cleanTax
data(Taxonomy)
roxygenise()
library(devtools)
roxygenise()
roxygenise()
roxygenise()
roxygen2()
library(roxygen)
library(roxygen2)
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
rm(list=ls())
?list2nev
?list2emv
?list2env
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
pkgload::dev_help('cleanTax')
roxygenise()
dev_help('cleanTax')
pkgload::dev_help('cleanTax')
data("F1F2_Weight")
?list2env
??group_by
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
print
roxygenise()
roxygenise()
roxygenise()
roxygenise()
list2env(F1, envir = .GlobalEnv)
?assign
View(f1f2)
View(f1f2)
F1F2.Weight
roxygenise()
Taxonomy
naiad::Taxonomy$Specie
'naiad::Taxonomy$Specie'
'naiad::Taxonomy$Species
''
naiad::Taxonomy$Species
''
naiad::Taxonomy$Species
roxygenise()
roxygenise()
naiad:Taxonomy
naiad::Taxonomy
naiad::Taxonomy$Species
load(F1F2.Weight)
shdiDF$prop <- shdiDF$Value / shdiDF$indTotal
shdiDF$lnprop <- shdiDF$lnprop[! shdiDF$lnprop = -Inf]
shdiDF$lnprop <- ifelse(shdiDF$prop==0,0,log(shdiDF$prop))
SHDI <-  plyr::ddply(shdiDF, c('River','Station','Date'), summarize,
H = -sum(prop*lnprop))
return(SHDI)
roxygenise()
library(roxygen2)
roxygenise()
#Test for naiad
#Shuntaro Koizumi
devtools::install("C:/Users/Shuntaro/OneDrive/NORCE LFI/naiad package")
library(installr)
updateR()
